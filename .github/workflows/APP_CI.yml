name: APP_CI
env:
  APP_NAME: lwt-app
  MACOSX_DEPLOYMENT_TARGET: "10.13"
permissions:
  packages: write
  contents: write
  id-token: write
on:
  push:
    branches:
      - app
jobs:
  dist_build:
    defaults:
      run:
        working-directory: lwt-reader
    name: Build Frontend dist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: lwtlab/lwt-server
          token: ${{ secrets.GH_PAT }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true
          cache: npm
          cache-dependency-path: ./lwt-reader/package-lock.json
          registry-url: https://npm.pkg.github.com/
      - name: Install dependencies
        run: npm i
      - name: Build dist
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: lwt-reader/dist/
          if-no-files-found: error
  build:
    needs:
      - dist_build
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |
              yarn make
          - host: windows-latest
            build: yarn make
            target: x86_64-pc-windows-msvc
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              yarn make
    name: stable - ${{ matrix.settings.target }} - node@18
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: lwtlab/lwt-app
          token: ${{ secrets.GH_PAT }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true
          cache: yarn
          cache-dependency-path: ./yarn.lock
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist
      - name: Install dependencies
        run: yarn install
      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ matrix.settings.target }}
          path: out/make/**/lwt-app*
          if-no-files-found: error
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist
      - name: List packages
        run: ls -R ./dist
        shell: bash
