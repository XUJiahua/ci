name: build_lwt_app_hear
env:
  APP_NAME: lwt-app-hear
permissions:
  contents: write
  id-token: write
on:
  repository_dispatch:
    types: [build_lwt_app_hear]
jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: DEBUG variables from github.event.client_payload
        run: |
          echo "tag: ${{ github.event.client_payload.tag }}"
          echo "sha: ${{ github.event.client_payload.sha }}"
          echo "ref: ${{ github.event.client_payload.ref }}"
  build:
    name: Build App
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
        with:
          repository: lwtlab/${{ env.APP_NAME }}
          token: ${{ secrets.GH_PAT }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true
          cache: yarn
          cache-dependency-path: ./yarn.lock
      - name: Install Wine on MacOS for Windows build
        run: brew install --cask wine-stable
        shell: bash
      - name: Setup ossutil
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: "oss-cn-shanghai.aliyuncs.com"
          access-key-id: ${{ secrets.OSS_ACCESS_KEY }}
          access-key-secret: ${{ secrets.OSS_SECRET_KEY }}
      - name: Install dependencies
        run: yarn install
      - name: Install core dependencies
        run: |
          bash ci/core_download.sh
          bash ci/core_install.sh
        shell: bash
      - name: Install cuda dll
        run: |
          bash ci/cuda_download.sh
          bash ci/cuda_install.sh
        shell: bash
      - name: Build
        run: |
          bash ci/build.sh
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: out/make/**/${{ env.APP_NAME }}*
          if-no-files-found: error
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          name: app
          path: dist
      - name: List packages
        run: ls -R ./dist
        shell: bash
      - name: Setup ossutil
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: "oss-cn-shanghai.aliyuncs.com"
          access-key-id: ${{ secrets.OSS_ACCESS_KEY }}
          access-key-secret: ${{ secrets.OSS_SECRET_KEY }}
      - name: Upload to Oss
        shell: bash
        run: |
          ossutil cp -r dist/ oss://lwt-dev/${{ env.APP_NAME }}/`date -u +%Y%m%d%H%M%S`-${{ github.event.client_payload.sha }}/